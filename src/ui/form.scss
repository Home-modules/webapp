div.radio-group,
label.checkbox,
.dropdown-select {
    &[data-error]:not([data-error=""]) {
        animation: shake 0.7s;

        &::after {
            content: attr(data-error);
            position: absolute;
            bottom: calc(100% + 5px);
            left: 0;
            background-color: var(--color-input-error-message);
            color: var(--color-input-error-message-text);
            border-radius: 3px;
            font-size: 12px;
            font-weight: bold;
            pointer-events: none;
            padding: 3px;
        }

        &::before { // Small triangle for the error
            content: "";
            position: absolute;
            bottom: calc(100% + 2px);
            left: 5px;
            width: 10px;
            height: 10px;
            background-color: var(--color-input-error-message);
            transform: rotate(45deg);
        }
    }
}

label.toggle-button {
    display: flex;
    align-items: center;
    justify-content: space-between;
    cursor: pointer;
    
    .right {
        position: relative;
        height: 20px;
    }

    input {
        cursor: pointer;
        appearance: none;
        margin: 0;
        height: 20px;
        width: 40px;
        border-radius: 10px;
        background-color: var(--color-checkbox-background);
        position: relative;
        transition: background-color 200ms, opacity 200ms;

        &::after {
            content: "";
            position: absolute;
            left: 2px;
            top: 2px;
            width: 16px;
            height: 16px;
            border-radius: 8px;
            background-color: var(--color-checkbox-check);
            transition: left 200ms;
        }

        &:checked {
            background-color: var(--color-checkbox-background-checked);

            &::after {
                left: 22px;
            }
        }

        &:disabled {
            opacity: 0.5;
        }
    }

    .intermittent {
        position: absolute;
        top: 2px;
        left: 2px;

        box-sizing: border-box;
        height: 16px;
        width: 16px;
        border-radius: 50%;
        box-sizing: border-box;
        border: 3px solid var(--color-checkbox-check);
        border-top-color: transparent;
        animation: fa-spin 1s linear infinite;
        transition: left 200ms;
    }

    input:checked + .intermittent {
        left: 22px;
    }
}

.ui-color-input {
    forced-color-adjust: none; // A color input should show colors properly

    .label {
        margin-bottom: 5px;
    }

    .colors {
        display: flex;

        input {
            flex-grow: 1;
            flex-basis: 10px;
            box-sizing: border-box;
            appearance: none;
            cursor: pointer;
            height: 30px;
            margin: 0;
            border: 0px solid var(--color-checkbox-background-checked);
            transition: border 200ms, background-color 200ms, opacity 200ms;
            background-color: white;

            &:first-child {
                border-top-left-radius: 7px;
                border-bottom-left-radius: 7px;
            }
            &:last-child {
                border-top-right-radius: 7px;
                border-bottom-right-radius: 7px;
            }
            
            @each $color in ("red", "orange", "yellow", "green", "blue", "purple", "pink", "brown") {
                &[value=#{$color}] {
                    background-color: var(--color-background-#{$color});

                    &:hover {
                        background-color: var(--color-background-#{$color}-hover);
                    }
                }
            }

            &:checked {
                border: 5px solid var(--color-checkbox-background-checked);
            }

            &:disabled {
                opacity: 0.5;
            }
        }
    }
}

input[type=submit] {
    display: block;
    width: 100%;
    padding: 10px;
    border-radius: 7px;
    background-color: var(--color-button-primary-background);
    border: none;
    color: var(--color-button-primary-foreground);
    font-size: 19px;
    cursor: pointer;
    transition: opacity 200ms, background-color 200ms, color 200ms;

    &:hover {
        background-color: var(--color-button-primary-hover-background);
    }

    &:disabled {
        opacity: var(--color-button-primary-disable-opacity)
    }

    @media (forced-colors: active) {
        border: 1px solid;

        &:hover, &:focus-visible {
            border-style: dashed;
            outline: none;
        }
    }
}
input[type=submit] + .intermittent {
    height: 20px;
    position: relative;
    top: -20px;
    border-radius: 7px;
    overflow: hidden;
    pointer-events: none;
    margin-bottom: -20px;
}
input[type=submit] + .intermittent::after {
    content: "";
    display: block;
    position: absolute;
    left: 0;
    right: 100%;
    bottom: -2px;
    height: 3px;
    transform: translate(-50%, -50%);
    font-size: 20px;
    background-color: var(--color-button-intermittent);
    animation: intermittent 3s infinite;
}

@keyframes shake {
    0% {
        transform: translateX(0) translateY(var(--shake-translate-y));
    }

    10% {
        transform: translateX(-6px) translateY(var(--shake-translate-y));
    }

    20% {
        transform: translateX(6px) translateY(var(--shake-translate-y));
    }

    30% {
        transform: translateX(-6px) translateY(var(--shake-translate-y));
    }

    40% {
        transform: translateX(6px) translateY(var(--shake-translate-y));
    }

    50% {
        transform: translateX(-6px) translateY(var(--shake-translate-y));
    }

    60% {
        transform: translateX(6px) translateY(var(--shake-translate-y));
    }

    70% {
        transform: translateX(-6px) translateY(var(--shake-translate-y));
    }

    80% {
        transform: translateX(6px) translateY(var(--shake-translate-y));
    }

    90% {
        transform: translateX(-6px) translateY(var(--shake-translate-y));
    }

    100% {
        transform: translateX(0) translateY(var(--shake-translate-y));
    }
}

:root {
    --shake-translate-y: 0;
}

fieldset {
    border: 1px solid var(--color-input-border);
    border-radius: 8px;
    padding: 15px;
    padding-top: 10px;
    margin: -3px 0 15px 0;

    legend {
        padding: 0 6px 0 4px;
        font-size: 18px;
    }

    > :last-child {
        margin-bottom: 0 !important;
    }
}

.horizontal-wrapper {
    display: flex;
    gap: 15px;
    margin-bottom: 15px;

    @media screen and (max-width: 600px) {
        &:not([data-responsive=false]) {
            flex-direction: column;
        }
    }

    > div {
        > :last-child {
            margin-bottom: 0;
        }
    }
}