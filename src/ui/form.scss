label.text, label.number {
    display: block;
    margin-bottom: 15px;
    font-size: 18px;
    position: relative;
    
    input {
        width: 100%;
        display: block;
        box-sizing: border-box;
        background-color: var(--color-input-background);
        padding: 10px;
        --postfix-width: 0px; // Fallback value for when there is no suffix
        padding-right: calc( var(--postfix-width) + 10px );
        border-radius: 7px;
        border: 1px solid var(--color-input-border);
        box-shadow: 0 0 0 0 transparent, inset 0 0 0 100px var(--color-input-background);
        font-size: 16px;
        color: var(--color-foreground);
        transition: box-shadow 200ms, border-color 200ms, padding-right 200ms;

        -moz-appearance: textfield;
        &::-webkit-inner-spin-button {
            appearance: none;
        }
        
        &:-webkit-autofill,
        &:-webkit-autofill:hover, 
        &:-webkit-autofill:focus, 
        &:-webkit-autofill:active{
            transition: background-color 999999s, color 999999s, // Prevent Chrome from filling the input with the autofill color by setting a very long transition (999999s= 11.5 days)
                box-shadow 200ms, border-color 200ms; // The usual transitions
        }

        &:focus {
            border-color: transparent;
            box-shadow: 0 0 0 3px var(--color-input-active-border), inset 0 0 0 100px var(--color-input-background);
            outline: none;
        }
    }

    &[data-error]:not([data-error=""]) {
        input {
            border-color: transparent;
            box-shadow: 0 0 0 3px var(--color-input-error-border), inset 0 0 0 100px var(--color-input-background);
            animation: shake 0.7s;
            position: relative;
            z-index: 1;
        }

        &::before {
            content: attr(data-error);
            position: absolute;
            bottom: 30px;
            right: 0;
            padding: 3px;
            padding-bottom: 13px;
            background-color: var(--color-input-error-message);
            color: var(--color-input-error-message-text);
            font-size: 12px;
            font-weight: bold;
            pointer-events: none;
            border-top-left-radius: 3px;
            border-top-right-radius: 3px;
            animation: shake 0.7s;
        }
    }

    .postfix {
        position: absolute;
        right: 11px;
        bottom: 11px;
        font-size: 0.9em;
        color: var(--color-foreground-subtext);
        transition: right 200ms;
    }

    button.spin {
        position: absolute;
        right: 9px;
        border: none;
        background: none;
        height: 13px;
        width: 12px;
        cursor: pointer;
        opacity: 0;
        transition: opacity 200ms;

        &:disabled {
            cursor: initial;

            &::after {
                opacity: 0.5;
            }
        }

        &::after {
            content: "";
            position: absolute;
            top: 4px;
            left: 2px;
            height: 7px;
            width: 7px;
            transform: rotate(45deg);
            border: 1px var(--color-input-border);
            border-style: solid none none solid;
            transition: border-color 200ms, top 200ms;
        }

        &:hover:not(:disabled)::after,
        &.active:not(:disabled)::after {
            border-color: var(--color-foreground);
        }

        &:active:active::after,
        &.active.active::after {
            top: 2px;
        }

        &.up {
            bottom: 20px;
        }
        &.down {
            bottom: 7px;

            &::after {
                top: 0;
                transform: rotate(-135deg);
            }
        }
    }

    &:hover button.spin,
    input:focus ~ button.spin {
        opacity: 1;
    }

    &.has-buttons:hover .postfix,
    &.has-buttons input:focus ~ .postfix {
        right: 30px;
    }

    &.has-buttons:hover input,
    &.has-buttons input:focus {
        padding-right: calc( var(--postfix-width) + 30px );
    }

    &.has-description {
        margin-bottom: 0;
    }

    + .description {
        color: var(--color-foreground-subtext);
        font-size: 0.9em;
        margin-bottom: 15px;
    }
}

label.checkbox {
    display: block;
    margin-bottom: 15px;
    cursor: pointer;
    position: relative;

    input[type="checkbox"] {
        appearance: none;
        height: 20px;
        width: 20px;
        border-radius: 5px;
        margin: 0;
        margin-right: 5px;
        background-color: var(--color-checkbox-background);
        vertical-align: middle;
        cursor: pointer;
        box-shadow: 0 0 0 0 var(--color-input-active-border);
        transition: background-color 200ms, box-shadow 200ms;
        position: relative;

        &::after {
            content: "";
            position: absolute;
            top: 2px;
            left: 6px;
            height: 10px;
            width: 5px;
            opacity: 0;
            border: 3px var(--color-checkbox-check);
            border-style: none solid solid none;
            transform: rotate(45deg);
            transition: opacity 200ms;
        }

        &:checked {
            background-color: var(--color-checkbox-background-checked);

            &::after {
                opacity: 1;
            }
        }

        &:focus-visible {
            outline: none;
            box-shadow: 0 0 0 3px var(--color-input-active-border);
        }
    }

    .label {
        vertical-align: middle;
        position: relative;
        top: -1px;
    }

    .required {
        color: var(--color-input-required);
    }

    &.has-description {
        margin-bottom: 0;
    }

    + .description {
        color: var(--color-foreground-subtext);
        font-size: 0.9em;
        margin-bottom: 15px;
    }
}

div.radio-group {
    margin-bottom: 15px;
    position: relative;

    label {
        cursor: pointer;

        input[type=radio] {
            margin: 2px 5px 2px 0;
            appearance: none;
            height: 20px;
            width: 20px;
            border-radius: 10px;
            background-color: var(--color-checkbox-background);
            vertical-align: middle;
            position: relative;
            box-shadow: 0 0 0 0 var(--color-input-active-border);
            transition: box-shadow 200ms;
            cursor: pointer;

            &::after {
                content: "";
                position: absolute;
                top: 10px;
                left: 10px;
                height: 0;
                width: 0;
                opacity: 0;
                border-radius: 100%;
                background-color: var(--color-checkbox-background-checked);
                transition: opacity 200ms, top 200ms, left 200ms, height 200ms, width 200ms;
            }

            &:checked::after {
                opacity: 1;
                top: 3px;
                left: 3px;
                height: 14px;
                width: 14px;
            }

            &:focus-visible {
                outline: none;
                box-shadow: 0 0 0 3px var(--color-input-active-border);
            }
        }

        .label {
            vertical-align: middle;
            position: relative;
            top: -1px;
        }
    }

    &.horizontal label {
        display: inline-block;
        margin-right: 15px;
    }

    &.vertical {
        > .label {
            margin-bottom: 7px;
        }

        label {
            display: block;
            margin-bottom: 7px;

            &.has-description {
                margin-bottom: 0;
            }
        
            + .description {
                color: var(--color-foreground-subtext);
                font-size: 0.9em;
                margin-bottom: 7px;
            }
        }
    }

    &.has-description {
        margin-bottom: 0;
    }

    + .description {
        color: var(--color-foreground-subtext);
        font-size: 0.9em;
        margin-bottom: 15px;
    }
}

div.radio-group,
label.checkbox,
.dropdown-select {
    &[data-error]:not([data-error=""]) {
        animation: shake 0.7s;

        &::after {
            content: attr(data-error);
            position: absolute;
            bottom: calc(100% + 5px);
            left: 0;
            background-color: var(--color-input-error-message);
            color: var(--color-input-error-message-text);
            border-radius: 3px;
            font-size: 12px;
            font-weight: bold;
            pointer-events: none;
            padding: 3px;
        }

        &::before { // Small triangle for the error
            content: "";
            position: absolute;
            bottom: calc(100% + 2px);
            left: 5px;
            width: 10px;
            height: 10px;
            background-color: var(--color-input-error-message);
            transform: rotate(45deg);
        }
    }
}

label.slider {
    display: block;
    margin-bottom: 15px;
    width: auto;

    .description {
        color: var(--color-foreground-subtext);
        font-size: 0.9em;
    }

    .input-and-value {
        display: flex;
        gap: 10px;
        margin-top: 5px;

        &.horizontal {
            align-items: center;

            &.small input {
                max-width: 150px;
            }
            &.large input {
                max-width: 250px;
            }
        }

        &.vertical {
            width: max-content;
            flex-direction: column;

            div {
                margin: 0 15px;
                width: 20px;
                overflow: hidden;
            }

            &.small div {
                height: 150px;

                input {
                    width: 150px;
                    transform: rotate(-90deg) translate(-65px, -65px);
                }
            }
            &.large div {
                height: 250px;

                input {
                    width: 250px;
                    transform: rotate(-90deg) translate(-115px, -115px);
                }
            }

            .value {
                display: block;
                text-align: center;
            }
        }

        input {
            margin: 0;
            flex-grow: 1;
            
            appearance: none;
            background: transparent;
            height: 20px;

            --thumb-background: var(--color-button-primary-hover-background);
            --thumb-background-hover: var(--color-button-primary-background);

            $colors: "red", "orange", "yellow", "green", "blue", "purple", "pink", "brown";
            @each $color in $colors {
                &.#{$color} {
                    --thumb-background: var(--color-background-#{$color});
                    --thumb-background-hover: var(--color-background-#{$color}-hover);
                }
            }

            &::-webkit-slider-thumb {
                appearance: none;
                width: 20px;
                height: 20px;
                border-radius: 10px;
                background-color: var(--thumb-background);
                cursor: pointer;
                position: relative;
                top: -6px;
                box-shadow: 0 0 0 0 var(--color-input-active-border);
                transition: background-color 200ms, box-shadow 200ms;
            }

            &::-webkit-slider-runnable-track {
                appearance: none;
                width: 100%;
                height: 8px;
                border-radius: 5px;
                background-color: var(--color-button-secondary-background);
                cursor: pointer;
                box-shadow: 0 0 0 0 var(--color-input-active-border);
                transition: background-color 200ms, box-shadow 200ms;
            }

            &::-moz-range-thumb {
                appearance: none;
                width: 20px;
                height: 20px;
                border-radius: 10px;
                background-color: var(--thumb-background);
                border: none;
                cursor: pointer;
                position: relative;
                top: -6px;
                box-shadow: 0 0 0 0 var(--color-input-active-border);
                transition: background-color 200ms, box-shadow 200ms;
            }

            &::-moz-range-track {
                appearance: none;
                width: 100%;
                height: 8px;
                border-radius: 5px;
                background-color: var(--color-button-secondary-background);
                cursor: pointer;
                box-shadow: 0 0 0 0 var(--color-input-active-border);
                transition: background-color 200ms, box-shadow 200ms;
            }

            &:hover {
                &::-webkit-slider-thumb {
                    background-color: var(--thumb-background-hover);
                }

                &::-webkit-slider-runnable-track {
                    background-color: var(--color-button-secondary-hover-background);
                }

                &::-moz-range-thumb {
                    background-color: var(--thumb-background-hover);
                }

                &::-moz-range-track {
                    background-color: var(--color-button-secondary-hover-background);
                }
            }

            &:focus-visible {
                outline: none;

                &::-webkit-slider-thumb {
                    box-shadow: 0 0 0 3px var(--color-input-active-border);
                }

                &::-webkit-slider-runnable-track {
                    box-shadow: 0 0 0 1px var(--color-input-active-border);
                }

                &::-moz-range-thumb {
                    box-shadow: 0 0 0 3px var(--color-input-active-border);
                }

                &::-moz-range-track {
                    box-shadow: 0 0 0 1px var(--color-input-active-border);
                }
            }
        }
    }
}

label.toggle-button {
    display: flex;
    align-items: center;
    justify-content: space-between;
    cursor: pointer;
    
    .right {
        position: relative;
        height: 20px;
    }

    input {
        cursor: pointer;
        appearance: none;
        margin: 0;
        height: 20px;
        width: 40px;
        border-radius: 10px;
        background-color: var(--color-checkbox-background);
        position: relative;
        transition: background-color 200ms, opacity 200ms;

        &::after {
            content: "";
            position: absolute;
            left: 2px;
            top: 2px;
            width: 16px;
            height: 16px;
            border-radius: 8px;
            background-color: var(--color-checkbox-check);
            transition: left 200ms;
        }

        &:checked {
            background-color: var(--color-checkbox-background-checked);

            &::after {
                left: 22px;
            }
        }

        &:disabled {
            opacity: 0.5;
        }
    }

    .intermittent {
        position: absolute;
        top: 2px;
        left: 2px;

        box-sizing: border-box;
        height: 16px;
        width: 16px;
        border-radius: 50%;
        box-sizing: border-box;
        border: 3px solid var(--color-checkbox-check);
        border-top-color: transparent;
        animation: fa-spin 1s linear infinite;
        transition: left 200ms;
    }

    input:checked + .intermittent {
        left: 22px;
    }
}

.ui-color-input {
    .label {
        margin-bottom: 5px;
    }

    .colors {
        display: flex;

        input {
            flex-grow: 1;
            flex-basis: 10px;
            box-sizing: border-box;
            appearance: none;
            cursor: pointer;
            height: 30px;
            margin: 0;
            border: 0px solid var(--color-checkbox-background-checked);
            transition: border 200ms, background-color 200ms;
            background-color: white;

            &:first-child {
                border-top-left-radius: 7px;
                border-bottom-left-radius: 7px;
            }
            &:last-child {
                border-top-right-radius: 7px;
                border-bottom-right-radius: 7px;
            }
            
            @each $color in ("red", "orange", "yellow", "green", "blue", "purple", "pink", "brown") {
                &[value=#{$color}] {
                    background-color: var(--color-background-#{$color});

                    &:hover {
                        background-color: var(--color-background-#{$color}-hover);
                    }
                }
            }

            &:checked {
                border: 5px solid var(--color-checkbox-background-checked);
            }
        }
    }
}

input[type=submit] {
    display: block;
    width: 100%;
    padding: 10px;
    border-radius: 7px;
    background-color: var(--color-button-primary-background);
    border: none;
    color: var(--color-button-primary-foreground);
    font-size: 19px;
    cursor: pointer;
    transition: opacity 200ms, background-color 200ms, color 200ms;

    &:hover {
        background-color: var(--color-button-primary-hover-background);
    }

    &:disabled {
        opacity: var(--color-button-primary-disable-opacity)
    }
}
input[type=submit] + .intermittent {
    height: 20px;
    position: relative;
    top: -20px;
    border-radius: 7px;
    overflow: hidden;
    pointer-events: none;
    margin-bottom: -20px;
}
input[type=submit] + .intermittent::after {
    content: "";
    display: block;
    position: absolute;
    left: 0;
    right: 100%;
    bottom: -2px;
    height: 3px;
    transform: translate(-50%, -50%);
    font-size: 20px;
    background-color: var(--color-button-intermittent);
    animation: intermittent 3s infinite;
}

@keyframes shake {
    0% {
        transform: translateX(0);
    }

    10% {
        transform: translateX(-6px);
    }

    20% {
        transform: translateX(6px);
    }

    30% {
        transform: translateX(-6px);
    }

    40% {
        transform: translateX(6px);
    }

    50% {
        transform: translateX(-6px);
    }

    60% {
        transform: translateX(6px);
    }

    70% {
        transform: translateX(-6px);
    }

    80% {
        transform: translateX(6px);
    }

    90% {
        transform: translateX(-6px);
    }

    100% {
        transform: translateX(0);
    }
}

fieldset {
    border: 1px solid var(--color-input-border);
    border-radius: 8px;
    padding: 15px;
    padding-top: 10px;
    margin: -3px 0 15px 0;

    legend {
        padding: 0 6px 0 4px;
        font-size: 18px;
    }

    > :last-child {
        margin-bottom: 0 !important;
    }
}

.horizontal-wrapper {
    display: flex;
    gap: 15px;
    margin-bottom: 15px;

    @media screen and (max-width: 600px) {
        &:not([data-responsive=false]) {
            flex-direction: column;
        }
    }

    > div {
        > :last-child {
            margin-bottom: 0;
        }
    }
}